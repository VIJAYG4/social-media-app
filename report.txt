Common graphql errors:
1) Throws a weird incomprehendible error inside node modules.
error: "cannot return null for non-nullable object" 
Solution:
Mostly some files are not saved in vscode. Save all the files 
separately in vscode where you made changes. 

2)SECRET_KEY should have value. 
Sometimes SECRET_KEY value will not work properly. don't hardcode
any value for it as it will create user login errors 
(invalid/expired token) 
Solution:
don't hardcode any values for SECRET_KEY. if you do, you have to 
register and login a new user. the old user would have used 
the old SECRET_KEY value and will not accept the login.

3) cannot read property "find" of undefined in graphql:
solution: forgot to add "await" keyword for the operation. ex: await Post.find()

4) cannot fetch data in the frontend. data returned is null. code is correct. 

5) ternary operator syntax error: 
loading ? () : ()
each () should have a wrapper. ex: <div></div> or <component></component>
{} means JSX experession. ex: looping through array is {posts.map((post) => <div key={post.id}>post</div>)}
---------------------------------------------------------------------------------------------
client-side summary:
1. install all the required packages like apollo-client, react-router-hook, semantic-ui-react, semantic-ui-css etc. from inside the client folder.
2. create ApolloProvider(one-time config) and wrap the App around it.
3. Create components(Home, Login, register pages) and hook it with react-router 
4. using semantic-ui menu bar display the navigation buttons at the top. 



Common commands:

Start the server:
npm run serve (will not restart the server when we make changes)

Start the client:
npm start